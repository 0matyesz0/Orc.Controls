<catel:Window x:Class="Orc.Controls.Example.Views.MainWindow"
              xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
              xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
              xmlns:catel="http://schemas.catelproject.com"
              xmlns:views="clr-namespace:Orc.Controls.Example.Views"
              xmlns:orccontrols="http://schemas.wildgums.com/orc/controls"
              Height="650" Width="850">

    <catel:Window.Resources>
        <SolidColorBrush x:Key="TabControlNormalBorderBrush" Color="#D4D4D4"/>
        <SolidColorBrush x:Key="ButtonNormalBackground" Color="#F4F4F4"/>
        <SolidColorBrush x:Key="TabItemSelectedBackground" Color="#FFF"/>
        <SolidColorBrush x:Key="TabItemHotBorderBrush" Color="#D4D4D4"/>
        <SolidColorBrush x:Key="TabItemDisabledBackground" Color="#F4F4F4"/>
        <SolidColorBrush x:Key="TabItemDisabledBorderBrush" Color="#FFC9C7BA"/>

        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="Padding" Value="6,4,6,4"/>
            <Setter Property="Width" Value="150"/>
            <Setter Property="Margin" Value="0 0 0 -1"/>
            <Setter Property="BorderBrush" Value="{StaticResource TabControlNormalBorderBrush}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid SnapsToDevicePixels="true">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="1,1,1,0"
								Background="{TemplateBinding Background}"
								Padding="{TemplateBinding Padding}">
                                <ContentPresenter x:Name="Content"
									ContentSource="Header"
									HorizontalAlignment="Left"
									RecognizesAccessKey="True"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="WhiteSmoke"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Panel.ZIndex" Value="1"/>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemSelectedBackground}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="false"/>
                                    <Condition Property="IsMouseOver" Value="true"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemHotBorderBrush}"/>
                            </MultiTrigger>
                            <Trigger Property="TabStripPlacement" Value="Bottom">
                                <Setter Property="BorderThickness" TargetName="Bd" Value="1,0,1,1"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Left">
                                <Setter Property="BorderThickness" TargetName="Bd" Value="1,1,0,1"/>
                            </Trigger>
                            <Trigger Property="TabStripPlacement" Value="Right">
                                <Setter Property="BorderThickness" TargetName="Bd" Value="0,1,1,1"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="TabStripPlacement" Value="Top"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin" Value="-2,-2,-2,-1"/>
                                <Setter Property="Margin" TargetName="Content" Value="0,0,0,1"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="TabStripPlacement" Value="Bottom"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin" Value="-2,-1,-2,-2"/>
                                <Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="TabStripPlacement" Value="Left"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin" Value="0 0 -2 -1"/>
                                <Setter Property="Margin" TargetName="Content" Value="0,0,1,0"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="TabStripPlacement" Value="Right"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin" Value="-1,-2,-2,-2"/>
                                <Setter Property="Margin" TargetName="Content" Value="1,0,0,0"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource TabItemDisabledBackground}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource TabItemDisabledBorderBrush}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </catel:Window.Resources>

    <TabControl Padding="10" 
                TabStripPlacement="Left" 
                Background="White" 
                BorderBrush="{StaticResource TabControlNormalBorderBrush}">

        <TabItem Header="AnimatedGif">
            <views:AnimatedGif />
        </TabItem>
        
        <TabItem Header="BindableRichTextBox">
            <views:BindableRichTextBox />
        </TabItem>

        <TabItem Header="ColorLegend">
            <views:ColorLegendView />
        </TabItem>

        <TabItem Header="ColorPicker">
            <views:ColorPicker>
                <views:ColorPicker.Resources>
                    <Style TargetType="{x:Type TabItem}"/>
                </views:ColorPicker.Resources>
            </views:ColorPicker>
        </TabItem>

        <TabItem Header="ConnectionStringBuilder">
            <views:ConnectionStringBuilderView />
        </TabItem>

        <TabItem Header="CulturePicker">
            <views:CulturePickerView/>
        </TabItem>
        
        <TabItem Header="DatePicker">
            <views:DatePicker />
        </TabItem>

        <TabItem Header="DateTimePicker">
            <views:DateTimePicker />
        </TabItem>

        <TabItem Header="DateRangePicker">
            <views:DateRangePicker />
        </TabItem>

        <TabItem Header="DirectoryPicker">
            <views:DirectoryPickerView />
        </TabItem>

        <TabItem Header="DropDownButton">
            <views:DropDownButtonView />
        </TabItem>

        <TabItem Header="Expander">
            <views:Expander />
        </TabItem>

        <TabItem Header="FilterBox">
            <views:FilterBox />
        </TabItem>

        <TabItem Header="LinkLabel">
            <views:LinkLabel />
        </TabItem>

        <TabItem Header="LogViewer">
            <views:LogViewer />
        </TabItem>

        <TabItem Header="NumericTextBox">
            <views:NumericTextBox />
        </TabItem>

        <TabItem Header="OpenFilePicker">
            <views:OpenFilePickerView />
        </TabItem>

        <TabItem Header="PinnableToolTip">
            <views:PinnableToolTip />
        </TabItem>

        <TabItem Header="RangeSlider">
            <views:RangeSliderView />
        </TabItem>

        <TabItem Header="SaveFilePicker">
            <views:SaveFilePickerView />
        </TabItem>

        <TabItem Header="TimeSpanPicker">
            <views:TimeSpanPickerView />
        </TabItem>
               
        <TabItem Header="ValidationContextControl">
            <views:ValidationContextView />
        </TabItem>

        <TabItem Header="WatermarkTextBox">
            <views:Watermark />
        </TabItem>

        <!--<TabItem Header="Combobox">
            <orc:StackGrid>
                <orc:StackGrid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </orc:StackGrid.RowDefinitions>

                <TextBlock Text="Just for test. Please remove it before merging with develop" 
                           FontWeight="Bold"
                           Foreground="DarkRed"/>
                
                <ComboBox IsEditable="{Binding ElementName=IsEditableCheckBox, Path=IsChecked, UpdateSourceTrigger=PropertyChanged}"
                          Text="{Binding ElementName=ComboboxResultTextBlock, Path=Text, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBox.ItemsSource>
                        <x:Array Type="sys:String" 
                                 xmlns:sys="clr-namespace:System;assembly=mscorlib">
                            <sys:String>first</sys:String>
                            <sys:String>second</sys:String>
                        </x:Array>
                    </ComboBox.ItemsSource>
                </ComboBox>
                    
                <CheckBox x:Name="IsEditableCheckBox" 
                          Content="Is Editable"/>

                <TextBlock Text="Result text:" Margin="0 10 0 0" FontWeight="Bold"/>
                <GridSplitter Height="1" HorizontalAlignment="Stretch" Background="Black" Margin="0 0 0 2" BorderBrush="Black" BorderThickness="1"/>
                
                <TextBlock x:Name="ComboboxResultTextBlock"/>
            </orc:StackGrid>
        </TabItem>-->

    </TabControl>
</catel:Window>
