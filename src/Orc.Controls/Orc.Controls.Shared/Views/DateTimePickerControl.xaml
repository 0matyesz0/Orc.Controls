<catel:UserControl x:Class="Orc.Controls.DateTimePickerControl"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:controls="clr-namespace:Orc.Controls"
                   xmlns:catel="http://catel.codeplex.com"
                   xmlns:sys="clr-namespace:System;assembly=mscorlib"
                   mc:Ignorable="d" x:Name="CurrentControl" d:DesignHeight="22" d:DesignWidth="190">
    
    <UserControl.Resources>
        <catel:BooleanToCollapsingVisibilityConverter x:Key="BooleanToCollapsingVisibilityConverter"/>

        <ControlTemplate x:Key="DateTimePickerToggleButtonTemplate" TargetType="{x:Type ToggleButton}">
            <Border BorderBrush="{TemplateBinding BorderBrush}" 
					Background="{TemplateBinding Background}" 
                    BorderThickness="{TemplateBinding BorderThickness}"
					SnapsToDevicePixels="true"
					CornerRadius="0">
                <Grid VerticalAlignment="Stretch">
                    <Border Grid.Row="0" Background="{TemplateBinding BorderBrush}" Height="4" VerticalAlignment="Top"/>
                    <Ellipse Grid.Row="0" Width="3" Height="3" Fill="White" VerticalAlignment="Top"/>
                    <TextBlock Text="{Binding Source={x:Static sys:DateTime.Now}, StringFormat=' d '}"
                               Margin="0 3 0 0" FontSize="10" HorizontalAlignment="Center"
                               VerticalAlignment="Center" Foreground="Gray"
                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Grid>
            </Border>
        </ControlTemplate>
        <Style x:Key="DateTimePickerToggleButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Width" Value="19"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Setter Property="Margin" Value="1"/>
            <Setter Property="Template" Value="{StaticResource DateTimePickerToggleButtonTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource ControlsAccentBrush}"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource ControlsAccentBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="Padding" Value="2 2 5 2" />
            <Style.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="{DynamicResource ControlsHighlightColor}"/>
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="ListBoxItem.IsSelected" Value="True" >
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="LightGray"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource ControlsAccentBrush}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="BorderBrush" Value="{DynamicResource ControlsAccentBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RatioSignStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=IsMouseOver}" Value="True">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=IsKeyboardFocusWithin}" Value="True">
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="LettersStyle" TargetType="{x:Type TextBlock}" >
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="DarkGray"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=IsMouseOver}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Grid}, Path=IsKeyboardFocusWithin}" Value="True">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="IsTabStop" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <TextBlock Style="{StaticResource LettersStyle}">
                            <ContentPresenter/>
                        </TextBlock>
                </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style BasedOn="{x:Null}" TargetType="{x:Type controls:NumericTextBox}">
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Margin" Value="2 0 0 0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="true">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="PopupButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border x:Name="Border" BorderThickness="0" Background="White" SnapsToDevicePixels="True">
                            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                              Margin="5 2 5 2"
                                              Content="{TemplateBinding Content}"
                                              ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource ControlsHighlightBrush}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource ControlsHighlightBrush}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" Value="#FFADADAD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid x:Name="MainGrid">
        <Border BorderThickness="1" Height="22" >
            <Grid Background="White" MinWidth="200">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid Margin="0 0 4 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <controls:NumericTextBox x:Name="NumericTBDay" Grid.Column="0" Text="{Binding Day}" MinValue="1" />
                    <TextBlock Grid.Column="1" Text="/" Style="{StaticResource RatioSignStyle}" />
                    <ToggleButton Grid.Column="1" x:Name="ToggleButtonD" Tag="{x:Static controls:DateTimePart.Day}"
                                  Checked="ToggleButton_OnChecked" Content="d" />

                    <controls:NumericTextBox x:Name="NumericTBMonth" Grid.Column="2" Text="{Binding Month, UpdateSourceTrigger=PropertyChanged}" 
                                             MinValue="1" MaxValue="12" TextChanged="NumericTBMonth_OnTextChanged"/>
                    <TextBlock Grid.Column="3" Text="/" Style="{StaticResource RatioSignStyle}" />
                    <ToggleButton Grid.Column="3" x:Name="ToggleButtonMo" Tag="{x:Static controls:DateTimePart.Month}"
                                  Checked="ToggleButton_OnChecked" Content="m" />
                
                    <controls:NumericTextBox x:Name="NumericTBYear" Grid.Column="4" Text="{Binding Year}" MinValue="0" />
                    <TextBlock Grid.Column="5" Text="" Style="{StaticResource RatioSignStyle}" />
                    <ToggleButton Grid.Column="5" x:Name="ToggleButtonY" Tag="{x:Static controls:DateTimePart.Year}" Content="y" />

                    <controls:NumericTextBox x:Name="NumericTBHour" Grid.Column="6" Text="{Binding Hour}" MaxValue="23" MinValue="0" />
                    <TextBlock Grid.Column="7" Text=":" Style="{StaticResource RatioSignStyle}" />
                    <ToggleButton Grid.Column="7" x:Name="ToggleButtonH" Tag="{x:Static controls:DateTimePart.Hour}"
                                  Checked="ToggleButton_OnChecked" Content="h" />

                    <controls:NumericTextBox x:Name="NumericTBMinute" Grid.Column="8" DoubleZero="True" MaxValue="59" MinValue="00"
                                             Text="{Binding Minute, StringFormat={}{0:00}}"/>
                    <TextBlock Grid.Column="9" Text=":" Style="{StaticResource RatioSignStyle}" />
                    <ToggleButton Grid.Column="9" x:Name="ToggleButtonM" Tag="{x:Static controls:DateTimePart.Minute}"
                                  Checked="ToggleButton_OnChecked" Content="m" />

                    <controls:NumericTextBox x:Name="NumericTBSecond" Grid.Column="10" DoubleZero="True" MaxValue="59" MinValue="0"
                                             Text="{Binding Second, StringFormat={}{0:00}}" />
                    <ToggleButton Grid.Column="11" x:Name="ToggleButtonS" Tag="{x:Static controls:DateTimePart.Second}"
                                  Checked="ToggleButton_OnChecked" Content="s" />
                
                </Grid>
                <StackPanel Grid.Column="1">
                    <ToggleButton x:Name="DatePickerIcon" DockPanel.Dock="Right" VerticalAlignment="Stretch"
                              Style="{StaticResource DateTimePickerToggleButtonStyle}"
                              Visibility="{Binding ShowOptionsButton, Converter={StaticResource BooleanToCollapsingVisibilityConverter}}"/>
                    <Popup Placement="Bottom" VerticalOffset="2" StaysOpen="False"
                           PlacementTarget="{Binding ElementName=DatePickerIcon}" 
                           IsOpen="{Binding IsChecked, ElementName=DatePickerIcon}" >
                        <Border BorderBrush="Gray" BorderThickness="1">
                            <StackPanel Background="White">
                                <Button x:Name="TodayButton" Content="Today" Click="TodayButton_OnClick" Style="{StaticResource PopupButtonStyle}"/>
                                <Button x:Name="NowButton" Content="Now" Click="NowButton_OnClick" Style="{StaticResource PopupButtonStyle}"/>
                                <Button x:Name="SelectDateButton" Content="Select date" Click="SelectDateButton_OnClick" Style="{StaticResource PopupButtonStyle}"/>
                            </StackPanel>
                        </Border>
                    </Popup>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</catel:UserControl>
