<catel:DataWindow x:Class="Orc.Controls.ConnectionStringEditWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:catel="http://catel.codeplex.com"
                   xmlns:controls="clr-namespace:Orc.Controls"
                   xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                  
                  ResizeMode="CanResizeWithGrip"
                   mc:Ignorable="d" d:DesignHeight="300" d:DesignWidth="400">
    
    <catel:DataWindow.Resources>
        <Style x:Key="RefreshButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Trigger.Setters>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <controls:AnimatedGif Width="16" 
                                                                      Height="16"
                                                                      HorizontalAlignment="Center"
                                                                      GifSource="/Resources/Images/Loading.gif" Margin="5" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger.Setters>
                </Trigger>
            </Style.Triggers>
        </Style>
    </catel:DataWindow.Resources>

    <catel:StackGrid MinWidth="300">
        <catel:StackGrid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </catel:StackGrid.RowDefinitions>

        <catel:StackGrid>
            <catel:StackGrid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </catel:StackGrid.ColumnDefinitions>

            <TextBlock Text="Provider:"/>
            <controls:DbProviderControl DbProvider="{Binding DbProvider, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

        </catel:StackGrid>


        <catel:StackGrid Visibility="{Binding DataSource, Converter={catel:ReferenceToCollapsingVisibilityConverter}}">
            <catel:StackGrid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </catel:StackGrid.ColumnDefinitions>

            <TextBlock Text="Server:"/>
            <ComboBox IsEditable="True"
                      IsDropDownOpen="{Binding IsServerListVisible}"
                      ItemsSource="{Binding Servers, IsAsync=True}"
                      Text="{Binding DataSource.Value, UpdateSourceTrigger=PropertyChanged}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="DropDownOpened">
                        <catel:EventToCommand Command="{Binding InitServers}" DisableAssociatedObjectOnCannotExecute="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>

            <Button Style="{StaticResource RefreshButtonStyle}"
                    Content="Refresh"
                    Command="{Binding RefreshServers}" 
                    IsEnabled="{Binding IsServersRefreshing, Converter={catel:BooleanToOppositeBooleanConverter}}"/>

        </catel:StackGrid>

        <GroupBox Header="Log on to the server"
                  Visibility="{Binding CanLogOnToServer, Converter={catel:BooleanToCollapsingVisibilityConverter}}">
            <catel:StackGrid>
                <catel:StackGrid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </catel:StackGrid.RowDefinitions>

                <RadioButton Content="Use Windows Authentication"
                             Visibility="{Binding IntegratedSecurity, Converter={catel:ReferenceToCollapsingVisibilityConverter}}"
                             IsChecked="{Binding IntegratedSecurity.Value}"/>
                
                <RadioButton x:Name="UseSqlServerAuthenticationRadioButton"
                             Content="Use SQL Server Authentication"
                             Visibility="{Binding IntegratedSecurity, Converter={catel:ReferenceToCollapsingVisibilityConverter}}"
                             IsChecked="{Binding UseSqlServerAuthentication}"/>

                <catel:StackGrid Margin="25 0 0 0"
                                 IsEnabled="{Binding ElementName=UseSqlServerAuthenticationRadioButton, Path=IsChecked}">
                    <catel:StackGrid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </catel:StackGrid.RowDefinitions>
                    <catel:StackGrid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </catel:StackGrid.ColumnDefinitions>

                    <TextBlock Text="User name" Visibility="{Binding UserId, Converter={catel:ReferenceToCollapsingVisibilityConverter}}"/>
                    <TextBox Text="{Binding UserId.Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

                    <TextBlock Text="Password" Visibility="{Binding Password, Converter={catel:ReferenceToCollapsingVisibilityConverter}}"/>
                    <PasswordBox Visibility="{Binding Password, Converter={catel:ReferenceToCollapsingVisibilityConverter}}">
                        <i:Interaction.Behaviors>
                            <controls:PasswordBindBehavior Password="{Binding Password.Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </i:Interaction.Behaviors>
                    </PasswordBox>
                </catel:StackGrid>
            </catel:StackGrid>
        </GroupBox>

        <catel:StackGrid Visibility="{Binding InitialCatalog, Converter={catel:ReferenceToCollapsingVisibilityConverter}}">
            <catel:StackGrid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </catel:StackGrid.ColumnDefinitions>

            <TextBlock Text="Database:"/>
            <ComboBox IsEditable="True"
                      IsDropDownOpen="{Binding IsDatabaseListVisible}"
                      ItemsSource="{Binding Databases, IsAsync=True}"
                      Text="{Binding InitialCatalog.Value, UpdateSourceTrigger=PropertyChanged}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="DropDownOpened">
                        <catel:EventToCommand Command="{Binding InitDatabases}"
                                              DisableAssociatedObjectOnCannotExecute="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>

            <Button Style="{StaticResource RefreshButtonStyle}"
                    Content="Refresh"
                    Command="{Binding RefreshDatabases}" 
                    IsEnabled="{Binding IsDatabasesRefreshing, Converter={catel:BooleanToOppositeBooleanConverter}}"/>

        </catel:StackGrid>

        <Grid>
            <Button Content="Test connection" Command="{Binding TestConnection}" HorizontalAlignment="Left"/>
            <Button Content="Advanced Options" Command="{Binding ShowAdvancedOptions}" HorizontalAlignment="Right"/>
        </Grid>

    </catel:StackGrid>
</catel:DataWindow>

 

