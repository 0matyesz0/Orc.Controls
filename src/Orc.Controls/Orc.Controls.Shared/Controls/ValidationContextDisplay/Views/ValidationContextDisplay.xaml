<catel:UserControl x:Class="Orc.Controls.ValidationContextDisplay"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                   xmlns:catel="http://catel.codeplex.com"
                   xmlns:controls="clr-namespace:Orc.Controls"
                   xmlns:data="clr-namespace:Catel.Data;assembly=Catel.Core"
                   xmlns:converters="clr-namespace:Orc.Controls.Converters"
                   mc:Ignorable="d"
                   d:DesignHeight="300"
                   d:DesignWidth="400">

    <UserControl.Resources>
        <converters:TreeViewItemToLeftMarginValueConverter Length="15" x:Key="LengthConverter" />
        
        <converters:ValidationResultTypeToColorConverter DefaultColor="Black" ErrorColor="Red" WarningColor="DarkOrange" x:Key="ResultTypeToColorConverter" />
        
        <SolidColorBrush x:Key="TreeViewDisabledForegroundBrush" Color="DarkGray"/>
        
        <PathGeometry x:Key="TreeArrow" Figures="M0,0 L0,6 L6,0 z"/>
        
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="Transparent" Height="16" Padding="5,5,5,5" Width="16">
                            <Path x:Name="ExpandPath" Data="{StaticResource TreeArrow}" 
                                  Fill="Transparent"
                                  Stroke="Black">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="135" CenterY="3" CenterX="3"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" CenterY="3" CenterX="3"/>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="Black"/>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource ValidationContextDisplayAccentBrush}"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="{DynamicResource ValidationContextDisplayAccentBrush}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource ValidationContextDisplayAccentBrush}"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="{DynamicResource ValidationContextDisplayAccentBrush}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                    <Condition Property="IsChecked" Value="False"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource ValidationContextDisplayAccentBrush}"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="Transparent"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="TreeViewItemFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="TreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            <Setter Property="Visibility" Value="{Binding IsVisible, Converter={catel:BooleanToCollapsingVisibilityConverter}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="MinHeight" Value="14"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Padding" Value="2"/>
             <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
             <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <StackPanel>
                            <Border Name="Bd" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                <Grid Margin="{Binding Converter={StaticResource LengthConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="15"/>
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="Expander" 
                                                  Grid.Column="0"
                                                  Style="{DynamicResource ExpandCollapseToggleStyle}"
                                                  IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"/>
                                    <ContentPresenter x:Name="PART_Header" 
                                                      Grid.Column="1"
                                                      ContentSource="Header"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                </Grid>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="HasHeader" Value="false"/>
                                    <Condition Property="Height" Value="Auto"/>
                                </MultiTrigger.Conditions>
                                <Setter TargetName="PART_Header" Property="MinHeight" Value="21"/>
                            </MultiTrigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ValidationContextDisplayHighlightBrush}"/>
                            </Trigger>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.IsActive}" Value="True" >
                                <Setter TargetName="Bd" Property="Background" Value="WhiteSmoke"/>
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=DataContext.IsActive}" Value="True"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsSelected}" Value="True"/>
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ValidationContextDisplayHighlightBrush}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource TreeViewDisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    
    <Grid>
        <TreeView ItemsSource="{Binding ValidationRules}" ItemContainerStyle="{StaticResource TreeViewItemStyle}">
            <TreeView.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#EBDFEC" />
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />

                <HierarchicalDataTemplate DataType="{x:Type controls:ValidationContextTreeNode}" ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch" Margin="0" >
                        <TextBlock Text="{Binding DisplayName}" Margin="5,0,0,0" VerticalAlignment="Center" Foreground="{Binding ResultType, Converter={StaticResource ResultTypeToColorConverter}}"/>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.Resources>
        </TreeView>
    </Grid>
</catel:UserControl>