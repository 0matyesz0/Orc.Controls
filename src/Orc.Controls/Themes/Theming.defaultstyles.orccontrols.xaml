<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:catel="http://schemas.catelproject.com"
                    xmlns:orccontrols="clr-namespace:Orc.Controls">

    <ResourceDictionary.MergedDictionaries>
        <!-- All wpf controls restyled with accent colors -->
        <ResourceDictionary Source="/Orc.Controls;component/Controls/AlignmentGrid/Themes/AlignmentGrid.generic.xaml" />
        <ResourceDictionary Source="/Orc.Controls;component/Controls/AnimatedGif/Themes/AnimatedGif.generic.xaml" />
        <ResourceDictionary Source="/Orc.Controls;component/Controls/AnimatingTextBlock/Themes/AnimatingTextBlock.generic.xaml" />
        <ResourceDictionary Source="/Orc.Controls;component/Controls/BindableRichTextBox/Themes/BindableRichTextBox.generic.xaml"/>
        <ResourceDictionary Source="/Orc.Controls;component/Controls/BusyIndicator/Themes/BusyIndicator.generic.xaml"/>
        <ResourceDictionary Source="/Orc.Controls;component/Controls/ColorLegend/Themes/ColorLegend.generic.xaml" />
        <ResourceDictionary Source="/Orc.Controls;component/Controls/ColorPicker/Themes/ColorPicker.generic.xaml" />
        <ResourceDictionary Source="/Orc.Controls;component/Controls/DatePicker/Themes/DatePicker.generic.xaml" />
        <ResourceDictionary Source="/Orc.Controls;component/Controls/DateTimePicker/Themes/DateTimePicker.generic.xaml" />
        <ResourceDictionary Source="/Orc.Controls;component/Controls/DropDownButton/Themes/DropDownButton.generic.xaml" />
        <ResourceDictionary Source="/Orc.Controls;component/Controls/Expander/Themes/Expander.generic.xaml" />
        <ResourceDictionary Source="/Orc.Controls;component/Controls/FilterBox/Themes/FilterBox.generic.xaml" />
        <ResourceDictionary Source="/Orc.Controls;component/Controls/SaveFilePicker/Themes/SaveFilePicker.generic.xaml" />
        <ResourceDictionary Source="/Orc.Controls;component/Controls/HeaderBar/Themes/HeaderBar.generic.xaml" />
        <ResourceDictionary Source="/Orc.Controls;component/Controls/LinkLabel/Themes/LinkLabel.generic.xaml" />
        <ResourceDictionary Source="/Orc.Controls;component/Controls/LogViewer/Themes/LogViewer.generic.xaml" />
        <ResourceDictionary Source="/Orc.Controls;component/Controls/NumericTextBox/Themes/NumericTextBox.generic.xaml" />
        <ResourceDictionary Source="/Orc.Controls;component/Controls/PinnableToolTips/Themes/PinnableToolTip.xaml" />
        <ResourceDictionary Source="/Orc.Controls;component/Controls/RangeSlider/Themes/RangeSlider.generic.xaml" />
        <ResourceDictionary Source="/Orc.Controls;component/Controls/TabControl/Themes/TabControl.generic.xaml" />
        <ResourceDictionary Source="/Orc.Controls;component/Controls/TimeSpanPicker/Themes/TimeSpanPicker.generic.xaml" />
        <ResourceDictionary Source="/Orc.Controls;component/Controls/ValidationContextControl/Themes/ValidationContextTree.generic.xaml" />
        <ResourceDictionary Source="/Orc.Controls;component/Controls/ValidationContextControl/Themes/ValidationContextControl.generic.xaml" />
        <ResourceDictionary Source="/Orc.Controls;component/Controls/WatermarkTextBox/Themes/WatermarkTextBox.generic.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <!-- TabControl -->
    <Style x:Key="DefaultTabControlStyle" TargetType="{x:Type orccontrols:TabControl}" BasedOn="{StaticResource {x:Type orccontrols:TabControl}}">
        <Setter Property="Margin" Value="{DynamicResource Margin.Default}" />
    </Style>

    <!-- FilterBox -->
    <Style x:Key="DefaultFilterBoxStyle" TargetType="{x:Type orccontrols:FilterBox}" BasedOn="{StaticResource {x:Type orccontrols:FilterBox}}">
        <Setter Property="MinHeight" Value="{DynamicResource Size.MinHeight}" />
        <Setter Property="Padding" Value="{DynamicResource Padding.TextBox}" />
        <Setter Property="Margin" Value="{DynamicResource Margin.TextBox}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />

        <!-- Due to a bug, adjust the error template (see http://stackoverflow.com/questions/321327/how-do-i-get-rid-of-the-red-rectangle-when-my-wpf-binding-validation-has-failed-a) -->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True">
                        <Border BorderThickness="1" BorderBrush="Red" 
                                Visibility="{Binding ElementName=placeholder, Mode=OneWay, Path=AdornedElement.IsVisible, Converter={catel:BooleanToHidingVisibilityConverter}}">
                            <AdornedElementPlaceholder x:Name="placeholder" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Show errors as tooltip -->
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors), Converter={catel:GetFirstValidationErrorConverter}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DefaultTimeSpanPickerStyle" 
           TargetType="{x:Type orccontrols:TimeSpanPicker}" 
           BasedOn="{StaticResource {x:Type orccontrols:TimeSpanPicker}}">

        <Setter Property="MinHeight" Value="{DynamicResource Size.MinHeight}" />
        <Setter Property="Padding" Value="{DynamicResource Padding.TextBox}" />
        <Setter Property="Margin" Value="{DynamicResource Margin.TextBox}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />

        <!-- Due to a bug, adjust the error template (see http://stackoverflow.com/questions/321327/how-do-i-get-rid-of-the-red-rectangle-when-my-wpf-binding-validation-has-failed-a) -->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True">
                        <Border BorderThickness="1" BorderBrush="Red" 
                                Visibility="{Binding ElementName=placeholder, Mode=OneWay, Path=AdornedElement.IsVisible, Converter={catel:BooleanToHidingVisibilityConverter}}">
                            <AdornedElementPlaceholder x:Name="placeholder" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Show errors as tooltip -->
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors), Converter={catel:GetFirstValidationErrorConverter}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DefaultNumericTextBoxStyle" 
           TargetType="{x:Type orccontrols:NumericTextBox}" 
           BasedOn="{StaticResource {x:Type orccontrols:NumericTextBox}}">

        <Setter Property="MinHeight" Value="{DynamicResource Size.MinHeight}" />
        <Setter Property="Padding" Value="{DynamicResource Padding.TextBox}" />
        <Setter Property="Margin" Value="{DynamicResource Margin.TextBox}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />

        <!-- Due to a bug, adjust the error template (see http://stackoverflow.com/questions/321327/how-do-i-get-rid-of-the-red-rectangle-when-my-wpf-binding-validation-has-failed-a) -->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True">
                        <Border BorderThickness="1" BorderBrush="Red" 
                                Visibility="{Binding ElementName=placeholder, Mode=OneWay, Path=AdornedElement.IsVisible, Converter={catel:BooleanToHidingVisibilityConverter}}">
                            <AdornedElementPlaceholder x:Name="placeholder" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Show errors as tooltip -->
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors), Converter={catel:GetFirstValidationErrorConverter}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DefaultRangeSliderStyle" 
           TargetType="{x:Type orccontrols:RangeSlider}" 
           BasedOn="{StaticResource {x:Type orccontrols:RangeSlider}}">

        <Setter Property="Margin" Value="{DynamicResource Margin.Default}" />
    </Style>

    <Style x:Key="DefaultBusyIndicatorStyle" 
           TargetType="{x:Type orccontrols:BusyIndicator}" 
           BasedOn="{StaticResource {x:Type orccontrols:BusyIndicator}}"/>

    <!-- WatermarkTextBox -->
    <Style x:Key="DefaultWatermarkTextBoxStyle" TargetType="{x:Type orccontrols:WatermarkTextBox}" BasedOn="{StaticResource {x:Type orccontrols:WatermarkTextBox}}">
        <Setter Property="MinHeight" Value="{DynamicResource Size.MinHeight}" />
        <Setter Property="Padding" Value="{DynamicResource Padding.TextBox}" />
        <Setter Property="Margin" Value="{DynamicResource Margin.TextBox}" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />

        <!-- Due to a bug, adjust the error template (see http://stackoverflow.com/questions/321327/how-do-i-get-rid-of-the-red-rectangle-when-my-wpf-binding-validation-has-failed-a) -->
        <Setter Property="Validation.ErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel LastChildFill="True">
                        <Border BorderThickness="1" BorderBrush="Red" 
                                Visibility="{Binding ElementName=placeholder, Mode=OneWay, Path=AdornedElement.IsVisible, Converter={catel:BooleanToHidingVisibilityConverter}}">
                            <AdornedElementPlaceholder x:Name="placeholder" />
                        </Border>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <!-- Show errors as tooltip -->
        <Style.Triggers>
            <Trigger Property="Validation.HasError" Value="true">
                <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors), Converter={catel:GetFirstValidationErrorConverter}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>