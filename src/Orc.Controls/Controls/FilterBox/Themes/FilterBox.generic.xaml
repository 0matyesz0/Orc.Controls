<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Orc.Controls"
                    xmlns:catel="http://schemas.catelproject.com"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">

    <Style x:Key="{x:Type controls:FilterBox}"
           TargetType="{x:Type controls:FilterBox}">
        <Style.Resources>
           <Style TargetType="{x:Type ListBoxItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                            <Border Name="Bd" 
                                    BorderThickness="{TemplateBinding Border.BorderThickness}"
                                    Padding="{TemplateBinding Control.Padding}"
                                    BorderBrush="{TemplateBinding Border.BorderBrush}"
                                    Background="{TemplateBinding Panel.Background}"
                                    SnapsToDevicePixels="True">   
                                <ContentPresenter Content="{TemplateBinding ContentControl.Content}"
                                                  ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                  ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="Selector.IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Panel.Background" TargetName="Bd" Value="Transparent"/>
                                    <Setter Property="Border.BorderBrush" TargetName="Bd" Value ="LightGray"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="Selector.IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Panel.Background" TargetName="Bd" Value="{controls:ThemeColorBrush ThemeColorStyle=DarkHighlight}"/>
                                    <Setter Property="Border.BorderBrush" TargetName="Bd" Value="{controls:ThemeColorBrush ThemeColorStyle=DarkHighlight}"/>
                                </MultiTrigger>
                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                    <Setter Property="Panel.Background" TargetName="Bd" Value="{controls:ThemeColorBrush ThemeColorStyle=Highlight}"/>
                                    <Setter Property="Border.BorderBrush" TargetName="Bd" Value="{controls:ThemeColorBrush ThemeColorStyle=Highlight}"/>
                                </Trigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="Bd">
                                        <Setter.Value>
                                            <DynamicResource ResourceKey="{x:Static SystemColors.GrayTextBrushKey}" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border x:Name="Chrome" BorderThickness="0" Background="#FFF4F4F4" SnapsToDevicePixels="True">
                                <Path x:Name="Path" Data="M0,1.05 L1.05,0 8.33,7.26 15.55,0.0 16.6,1.0 9.3,8.3 16.6,15.55 15.55,16.6 8.3,9.3 1,16.6 0,15.6 7.3,8.3 z" 
                                  Fill="#575757" Margin="4" Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="Chrome" Value="{controls:ThemeColorBrush ThemeColorStyle=Highlight}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="Chrome" Value="{controls:ThemeColorBrush ThemeColorStyle=AccentColor}"/>
                                    <Setter Property="Fill" TargetName="Path" Value="White"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="#FFADADAD"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
                <Style.Setters>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TextBox}">
                                <Grid>
                                    <ScrollViewer x:Name="PART_ContentHost" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                    <TextBlock x:Name="PART_Watermark"
                                               Margin="{TemplateBinding Padding}"
                                               HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                               Text="{Binding Path=Watermark, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:FilterBox}}}"
                                               IsHitTestVisible="False"
                                               Visibility="Collapsed"
                                               Focusable="False" 
                                               Foreground="Gray" />
                                </Grid>

                                <ControlTemplate.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsFocused" Value="False" />
                                            <Condition Property="Text" Value="" />
                                        </MultiTrigger.Conditions>
                                        <MultiTrigger.Setters>
                                            <Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible" />
                                        </MultiTrigger.Setters>
                                    </MultiTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style.Setters>
            </Style>
        </Style.Resources>
        
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
        <Setter Property="BorderBrush" Value="LightGray"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="AllowDrop" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:FilterBox}">
                    <Border x:Name="Bd" 
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <TextBox x:Name="PART_FilterTextBox" 
                                     Margin="0"
                                     Padding="{TemplateBinding Padding}"
                                     VerticalAlignment="Center"
                                     VerticalContentAlignment="Center"
                                     Text="{Binding Path=Text, Mode=TwoWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:FilterBox}}}">
                                <i:Interaction.Behaviors>
                                    <catel:UpdateBindingOnTextChanged UpdateDelay="750" />
                                    <catel:AutoCompletion PropertyName ="{Binding PropertyName, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:FilterBox}}}" 
                                                          ItemsSource="{Binding FilterSource, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:FilterBox}}}" 
                                                          UseAutoCompletionService="{Binding AllowAutoCompletion, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:FilterBox}}}"/>
                                    <catel:SelectTextOnFocus />
                                </i:Interaction.Behaviors>
                            </TextBox>
                            
                            <Button x:Name="PART_ClearButton"
                                    Grid.Column="1"
                                    Width="18"
                                    DockPanel.Dock="Right"
                                    Visibility="{Binding Path=IsEnabled, Converter={catel:BooleanToCollapsingVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:FilterBox}}}"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{controls:ThemeColorBrush ThemeColorStyle=AccentColor}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{controls:ThemeColorBrush ThemeColorStyle=AccentColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#FFADADAD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
